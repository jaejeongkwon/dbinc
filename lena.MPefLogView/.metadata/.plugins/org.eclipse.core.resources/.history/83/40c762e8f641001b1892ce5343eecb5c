package com.dbinc.aim.lenaPLjson;

import java.io.BufferedReader;
import java.io.IOException;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class ParsingJSON {
	public void actionPerformed(BufferedReader br, String itemjson, String term ) throws Exception{	
		JSONParser parser = new JSONParser();
		try {  	
            JSONObject jOb ;
            JSONArray  jArr;
            String line;
            
            System.out.println("============================================================================================================================================");
			System.out.println("       TIME \t\t" + ItemLenaPL.makeTitle(itemjson) );
			System.out.println("============================================================================================================================================");
			
			ReadJob rj = new ReadJob();
			
    		while ((line = br.readLine()) != null) {
    			jOb = (JSONObject) parser.parse(line);
    			
    			String gtime = jOb.get("TIMESTAMP").toString();
    			
	    		if ( "month" == term ) {
	    			rj.actionPerformed(gtime, itemjson, jOb);
		    	
	    		}    			//if (gtime.contains("2020-11-23") ){
	    		else if (gtime.contains(UiLPL.get2day()) ){
	    					rj.actionPerformed(gtime, itemjson, jOb);
	    			}
	    		}
    			
    			
    			/*
    			jArr = (JSONArray) jOb.get(itemjson);
    			
    			String gtime = jOb.get("TIMESTAMP").toString();
    			if ( "month" == term ) {
	    			//System.out.println( gtime + "\t " + ItemLenaPL.makeItem(webObj, itemjson)	);
    				
		    		for (Object ob : jArr){
		    			JSONObject wi = (JSONObject)ob;
		    			System.out.println( gtime + "\t " + ItemLenaPL.makeItem(wi, itemjson));
		    			
		    			if (itemjson == "WAS"){
		    				JSONArray darr = (JSONArray) wi.get("datasources");
		    				ItemLenaPL.getDS(darr);
		    			}
		    		}
	    			
	    			
    			} else {
    				//if (gtime.contains("2020-11-23") ){
    				if (gtime.contains(UiLPL.get2day()) ){
    					//System.out.println( gtime + "\t " + ItemLenaPL.makeItem(webObj, itemjson)	);
    					
    		    		for (Object ob : jArr){
    		    			JSONObject wi = (JSONObject)ob;
    		    			System.out.println( gtime + "\t " + ItemLenaPL.makeItem(wi, itemjson));
    		    			
    		    			if (itemjson == "WAS"){
    		    				JSONArray darr = (JSONArray) wi.get("datasources");
    		    				ItemLenaPL.getDS(darr);
    		    			}
    		    		}
    				}
    			}
    			*/
    	    }
    		
    		System.out.println("============================================================================================================================================");
			
    		System.out.println("============================================================================================================================================");
			System.out.println("       TIME \t\t" + ItemLenaPL.makeTitle(itemjson) );
			System.out.println("============================================================================================================================================");
			
			
    	} catch (IOException e) {
    		e.printStackTrace();
    	} catch (ParseException e) {
    		e.printStackTrace();
    	}finally {
    	    if(br!=null) {
    	    	br.close();
    	    }
    	}
	}

}
